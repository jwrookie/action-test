# This workflow will do a clean install of node dependencies, build.yaml the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build klein task

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Environment to run against'
        required: true
        type: choice
        options:
          - dev
          - outer
          - pre
          - pro
          - test

env:
  AWS_REGION: ap-east-1
  IMAGE_NAME: coinflow/klein-task
  DOCKERFILE_PATH: Dockerfile

jobs:

  klein_task_build:
    runs-on: [self-hosted,build.yaml-runner]
    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::818052344024:role/GithubActionsRole
          role-session-name: GithubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: restore yarn
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Build images and push it in to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -f ${{ env.DOCKERFILE_PATH }} -t $REGISTRY/${{ env.IMAGE_NAME }}:${{ inputs.deploy_target }} .
          docker push $REGISTRY/${{ env.IMAGE_NAME }}:${{ inputs.deploy_target }}
